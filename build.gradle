plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id "com.diffplug.spotless" version "6.20.0"
}

group = 'uk.ac.ebi.ena.sra'
archivesBaseName = 'webin-xml'
version = '3.0.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/generated/java'
        }
        resources {
            srcDir 'src/main/resources'
            include '**/SRA*.xsd'
            include '**/ENA*.xsd'
            include '**/EGA*.xsd'
            include '**/*.xslt'
            exclude '**/ENA.embl.xsd'
            exclude '**/ENA.root.xsd'
        }
    }
    generated {
        java
        output.resourcesDir = sourceSets.main.output.resourcesDir
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        // Group level (enasequence) maven artifactory.
        url "https://gitlab.ebi.ac.uk/api/v4/groups/enasequence/-/packages/maven"

        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = project.ext.properties.gitlab_private_token
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }

    // For BioSamples client
    maven {
        url 'https://gitlab.ebi.ac.uk/api/v4/projects/2669/packages/maven'

        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = biosamples_gitlab_private_token
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

dependencies {
    api ('uk.ac.ebi.biosamples:models-core:5.+')

    api 'org.apache.xmlbeans:xmlbeans:2.6.0'

    api(group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.11.2')

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation(group: 'commons-io', name: 'commons-io', version: '1.3.2')

    // Without this, a default JDK class is used for compiling xslts that throws
    // javax.xml.transform.TransformerConfigurationException for some reason.
    runtimeOnly 'net.sf.saxon:saxon:8.7' //9.0, 9.7
    // To fix a Null pointer exception thrown when a transformation is applied on an object.
    runtimeOnly 'net.sf.saxon:saxon-dom:8.7' //9.0, 9.7

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.xmlunit:xmlunit-core:2.9.1'
    testImplementation 'org.xmlunit:xmlunit-matchers:2.9.1'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
    testImplementation 'org.skyscreamer:jsonassert:1.5.1'
}

tasks.withType(Copy).all {
    duplicatesStrategy DuplicatesStrategy.WARN
}

task generateXMLBeanSources () {
    doLast{
        delete "src/generated/java"
        ant.taskdef(
                name:'xmlbean',
                classname: 'org.apache.xmlbeans.impl.tool.XMLBean',
                classpath: configurations.compileClasspath.asPath)
        sourceSets.main.resources.files.each {File file ->
            ant.xmlbean(
                    javasource: 1.8,
                    schema: file.path,
                    classgendir: "build/classes/java/main" ,
                    srcgendir: "src/generated/java",
                    classpath: configurations.compileClasspath.asPath) {
                fileset(dir: file.parentFile) {
                    include(name: '*.xsdconfig')
                }
            }
        }
    }
}

compileJava.dependsOn generateXMLBeanSources
publish.dependsOn build

task classes (overwrite: true)  {
}

test {
    maxHeapSize = "1024m"
    jvmArgs "-Dfile.encoding=UTF-8"
    testLogging {
        events "failed", "standardOut", "standardError"
    }
}

spotless {
    encoding 'UTF-8'
    lineEndings 'UNIX'
    java {
        targetExclude 'src/generated/**'
        importOrder('java', 'javax', 'org', 'com', '', 'uk')
        removeUnusedImports()
        googleJavaFormat()
        licenseHeader '''/*
 * Copyright 2023 EMBL - European Bioinformatics Institute
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
'''
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier  = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.generated.allSource
    archiveClassifier  = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            // Project specific maven repository in Gitlab.
            url "https://gitlab.ebi.ac.uk/api/v4/projects/3209/packages/maven"
            // Developer token in Gitlab.
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = project.ext.properties.gitlab_private_token
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

task printSources  {
    sourceSets.main.allSource.files.each {File file ->
        println file
    }
}
